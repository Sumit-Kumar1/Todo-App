name: CI

on:
  workflow_call:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: "go.mod"
          cache: true
          id: go

      - name: Install dependencies
        run: go mod download

      - name: Run tests
        run: |
          go install gotest.tools/gotestsum@latest
          mkdir -p coverage
          CGO_ENABLED=0  GOOS=linux GOARCH=amd64 gotestsum --format testname -- -count=1 -p 1 -coverprofile=coverage.out.tmp ./... -coverpkg=./... -timeout 5m

      - name: Run linter
        uses: golangci/golangci-lint-action@v3
        with:
          version: latest

      - name: Build
        run: |
          CGO_ENABLED=0 GOSO=linux go build -v ./...

      - name: Test coverage report
        run: |
          cat coverage/coverage.out.tmp >> coverage/coverage.out
          go tool cover -func=coverage/coverage.out

      - name: SonarQube Scan
        uses: sonarsource/sonarcloud-github-action@master
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_PROJECT_KEY: ${{ secrets.SONAR_PROJECT_KEY }}
          SONAR_ORGANIZATION: ${{ secrets.SONAR_ORGANIZATION }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}

      - name: SonarQube Analysis
        uses: sonarsource/sonarqube-quality-gates-action@master
        timeout-minutes: 5
        with:
          organization: ${{ secrets.SONAR_ORGANIZATION }}
          projectKey: ${{ secrets.SONAR_PROJECT_KEY }}
          token: ${{ secrets.SONAR_TOKEN }}

      - name: Run Gosec Security Scanner
        uses: securego/gosec@master
        with:
          args: ./...

  Code Quality:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: "go.mod"
          cache: true
          id: go

      - name: Install dependencies
        run: go mod download

      - name: Run linter check
        uses: golangci/golangci-lint-action@v6
        with:
          version: v1.62.2
          working-directory: .
          args: --out-format=colored-line-number ./... --timeout=5m
          skip-cache: false

  sonar-analysis:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: SonarQube Scan
        uses: sonarsource/sonarcloud-github-action@master
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_PROJECT_KEY: ${{ secrets.SONAR_PROJECT_KEY }}
          SONAR_ORGANIZATION: ${{ secrets.SONAR_ORGANIZATION }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}

      - name: SonarQube Analysis
        uses: sonarsource/sonarqube-quality-gates-action@master
        timeout-minutes: 5
        with:
          organization: ${{ secrets.SONAR_ORGANIZATION }}
          projectKey: ${{ secrets.SONAR_PROJECT_KEY }}
          token: ${{ secrets.SONAR_TOKEN }}
